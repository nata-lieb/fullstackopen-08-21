{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","filter","handleFilterChange","value","onChange","PersonForm","addPerson","name","number","handleNameChange","handleNumberChange","onSubmit","type","Persons","persons","removePerson","map","person","onClick","id","Notification","message","text","style","background","fontSize","borderStyle","borderRadius","padding","marginBottom","color","error","baseUrl","initialMesssage","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilter","setMessage","useEffect","axios","get","then","response","data","setTimeout","personsToShow","toLowerCase","includes","e","target","event","preventDefault","newObject","find","window","confirm","put","p","catch","post","personService","concat","personToDelete","delete","status","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aa179d6d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({ filter, handleFilterChange }) => (\r\n  <div>\r\n    filter shown with <input value={filter} onChange={handleFilterChange} />\r\n  </div>\r\n)\r\n\r\nexport default Filter\r\n","import React from 'react'\r\n\r\nconst PersonForm = ({ addPerson, name, number, handleNameChange, handleNumberChange }) => (\r\n  <form onSubmit={addPerson}>\r\n    <div>\r\n      name: <input value={name} onChange={handleNameChange} />\r\n    </div>\r\n    <div>\r\n      number: <input value={number} onChange={handleNumberChange} />\r\n    </div>\r\n    <div>\r\n      <button type='submit'>add</button>\r\n    </div>\r\n  </form>\r\n)\r\n\r\nexport default PersonForm\r\n","import React from 'react'\r\n\r\nconst Persons = ({ persons, removePerson }) => (\r\n  <div>\r\n    {persons.map((person) => (\r\n      <div key={person.id}>\r\n        {person.name} {person.number} <button onClick={() => removePerson(person.id)}>delete</button>\r\n      </div>\r\n    ))}\r\n  </div>\r\n)\r\n\r\nexport default Persons\r\n","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (!message.text) return null\r\n\r\n  const style = {\r\n    background: 'lightgrey',\r\n    fontSize: '20px',\r\n    borderStyle: 'solid',\r\n    borderRadius: '5px',\r\n    padding: '10px',\r\n    marginBottom: '10px',\r\n    color: message.error ? 'red' : 'green',\r\n  }\r\n\r\n  return <div style={style}>{message.text}</div>\r\n}\r\n\r\nexport default Notification\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nexport const getAll = () => {\r\n  return axios.get(baseUrl)\r\n}\r\n\r\nexport const create = (newObject) => {\r\n  return axios.post(baseUrl, newObject)\r\n}\r\n\r\nexport const update = (newObject) => {\r\n  return axios.put(`${baseUrl}/${newObject.id}`, newObject)\r\n}\r\n\r\nexport const remove = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport * as personService from './services/persons'\n\nconst initialMesssage = { text: '', error: false }\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const [message, setMessage] = useState(initialMesssage)\n\n  useEffect(() => {\n    personService.getAll().then((response) => {\n      setPersons(response.data)\n    })\n  }, [])\n\n  useEffect(() => {\n    message.text &&\n      setTimeout(() => {\n        setMessage(initialMesssage)\n      }, 5000)\n  }, [message])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const person = persons.find((person) => person.name === newName)\n    if (person) {\n      window.confirm(`${person.name} is already added to phonebook, replace the old number with a new one?`) &&\n        personService\n          .update({ ...person, number: newNumber })\n          .then((response) => {\n            setPersons(persons.map((p) => (p.id === person.id ? response.data : p)))\n            setNewName('')\n            setNewNumber('')\n            setMessage({ text: `Updated ${response.data.name}`, error: false })\n          })\n          .catch((error) => {\n            setMessage({\n              text: error.response.data.error,\n              error: true,\n            })\n          })\n      return\n    }\n    personService\n      .create({ name: newName, number: newNumber })\n      .then((response) => {\n        setPersons(persons.concat(response.data))\n        setNewName('')\n        setNewNumber('')\n        setMessage({ text: `Added ${response.data.name}`, error: false })\n      })\n      .catch((error) => {\n        setMessage({\n          text: error.response.data.error,\n          error: true,\n        })\n      })\n  }\n\n  const removePerson = (id) => {\n    const personToDelete = persons.find((person) => person.id === id)\n    if (id && window.confirm(`Delete ${personToDelete.name}?`)) {\n      personService\n        .remove(id)\n        .then((response) => {\n          response.status === 204 && setPersons(persons.filter((p) => p.id !== id))\n        })\n        .catch((error) => {\n          setMessage({\n            text: error.response.data.error,\n            error: true,\n          })\n          setPersons(persons.filter((p) => p.id !== id))\n        })\n    }\n  }\n\n  const handleNameChange = (e) => setNewName(e.target.value)\n  const handleNumberChange = (e) => setNewNumber(e.target.value)\n  const handleFilterChange = (e) => setFilter(e.target.value)\n\n  const personsToShow =\n    filter === '' ? persons : persons.filter((person) => person.name.toLowerCase().includes(filter.toLowerCase()))\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <Filter filter={filter} handleFilterChange={handleFilterChange} />\n      <h2>add a new</h2>\n      <PersonForm\n        addPerson={addPerson}\n        name={newName}\n        number={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={personsToShow} removePerson={removePerson} />\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}